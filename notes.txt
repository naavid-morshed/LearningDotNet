1. In EndPoints, method can return WebApplication obj or RouteGroupBuilder obj.	
2. RouteGroupBuilder? group is used to defined a set of related routes
3. [Required][StringLength(50)] string Name [these are class annotations like springboot]
4. MinimalApis.Extensions in Nuget Packages [add WithParameterValidation() after methods to make sure point (3) 
   is applied during requests]

   Example => 
   var group = app.MapGroup("games").WithParameterValidation();
   
   group.MapPost("/", (CreateGameDto newGame) =>
        {
            GameDto game = new(
                games.Count + 1,
                newGame.Name,
                newGame.Genre,
                newGame.Price,
                newGame.ReleaseDate
            );

            games.Add(game);

            return Results.CreatedAtRoute(GetGameEndPointName, new { id = game.Id }, game);
        }).WithParameterValidation(); // this is required to make this package work, it can also be added to group at class level

5. Microsoft.EntityFrameworkCore.Sqlite [nuget package for using sqlite with dotnet]
6. Microsoft.EntityFrameworkCore.Design [The Entity Framework Core tools help with design-time development tasks. 
                                         They're primarily used to manage Migrations and to scaffold a DbContext and 
                                         entity types by reverse engineering the schema of a database.]
7. dotnet ef migrations add InitialCreate --output-dir Data/Migrations [will create runnable file to create/update/downgrade/remove database
                                                                        based on DbContext]
8. dotnet ef database update [updates/creates database]